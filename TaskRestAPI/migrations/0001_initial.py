# Generated by Django 3.0.3 on 2020-03-30 00:19

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Izdavaci',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ime', models.CharField(max_length=45, verbose_name='ime')),
                ('racun', models.CharField(blank=True, default=None, max_length=45, null=True, verbose_name='racun')),
                ('email', models.EmailField(blank=True, default=None, max_length=70, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Knjige',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naslov', models.CharField(max_length=30, verbose_name='naslov')),
                ('strana', models.IntegerField(blank=True, default=None, null=True, verbose_name='strana')),
                ('cena', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='cena')),
                ('opis', models.TextField(blank=True, default=None, max_length=300, null=True, verbose_name='opis')),
                ('godinaIzdanja', models.IntegerField(default=2020, verbose_name='godinaIzdanja')),
                ('ISBN', models.CharField(max_length=28, verbose_name='ISBN')),
                ('slika', models.ImageField(blank=True, default=None, null=True, upload_to=None)),
                ('kategorija', models.CharField(choices=[], default='', max_length=30, verbose_name='kategorija')),
            ],
        ),
        migrations.CreateModel(
            name='Narudzbine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datumNarucivanja', models.DateTimeField(auto_now_add=True, null=True, verbose_name='datumNarucivanja')),
                ('datumPrijema', models.DateTimeField(blank=True, default=None, null=True, verbose_name='datumPrijema')),
                ('placeno', models.BooleanField(blank=True, default=False, null=True, verbose_name='placeno')),
            ],
        ),
        migrations.CreateModel(
            name='Korisnici',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('ulicaIBroj', models.CharField(blank=True, default=None, max_length=45, null=True, verbose_name='ulicaIBroj')),
                ('brojPoste', models.IntegerField(blank=True, null=True, verbose_name='brojPoste')),
                ('grad', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='grad')),
                ('telefon', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='telefon')),
                ('is_korisnik', models.BooleanField(default=True, verbose_name='korisnikstatus')),
                ('is_autor', models.BooleanField(default=False, verbose_name='autorstatus')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='StavkeNarudzbine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kolicina', models.IntegerField(default=1, verbose_name='kolicina')),
                ('knjiga', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='knjiga+', to='TaskRestAPI.Knjige', verbose_name='knjiga')),
                ('narudzbina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='narudzbina+', to='TaskRestAPI.Narudzbine', verbose_name='narudzbina')),
            ],
        ),
        migrations.CreateModel(
            name='OceneKnjiga',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ocena', models.IntegerField(default=1, verbose_name='ocena')),
                ('knjiga', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='knjigaID+', to='TaskRestAPI.Knjige', verbose_name='knjiga')),
                ('korisnik', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='korisnik+', to=settings.AUTH_USER_MODEL, verbose_name='korisnik')),
            ],
        ),
        migrations.AddField(
            model_name='narudzbine',
            name='korisnik',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='korisnik+', to=settings.AUTH_USER_MODEL, verbose_name='korisnik'),
        ),
        migrations.CreateModel(
            name='KomentariNaKnjigama',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('komentar', models.TextField(blank=True, default='', max_length=112, null=True, verbose_name='komentar')),
                ('knjiga', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='knjiga+', to='TaskRestAPI.Knjige', verbose_name='knjiga')),
                ('korisnik', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='korisnik+', to=settings.AUTH_USER_MODEL, verbose_name='korisnik')),
            ],
        ),
        migrations.AddField(
            model_name='knjige',
            name='autor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='autor+', to=settings.AUTH_USER_MODEL, verbose_name='autor'),
        ),
        migrations.AddField(
            model_name='knjige',
            name='izdavac',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='izdavac+', to='TaskRestAPI.Izdavaci', verbose_name='izdavac'),
        ),
    ]
